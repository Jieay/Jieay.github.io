{"pages":[{"title":"","date":"2019-03-04T07:26:41.565Z","updated":"2019-03-04T07:26:41.559Z","comments":true,"path":"404.html","permalink":"https://jieay.github.io/404.html","excerpt":"","text":""},{"title":"书单","date":"2019-03-01T09:15:41.726Z","updated":"2019-03-01T09:15:41.725Z","comments":false,"path":"books/index.html","permalink":"https://jieay.github.io/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2019-03-01T09:41:13.064Z","updated":"2019-03-01T09:41:13.064Z","comments":false,"path":"categories/index.html","permalink":"https://jieay.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2019-03-01T09:15:53.025Z","updated":"2019-03-01T09:15:53.025Z","comments":true,"path":"links/index.html","permalink":"https://jieay.github.io/links/index.html","excerpt":"","text":""},{"title":"关于","date":"2019-03-01T09:34:33.815Z","updated":"2019-03-01T09:34:33.815Z","comments":false,"path":"about/index.html","permalink":"https://jieay.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"标签","date":"2019-03-04T08:56:50.000Z","updated":"2019-03-04T08:57:58.871Z","comments":false,"path":"tags/index.html","permalink":"https://jieay.github.io/tags/index.html","excerpt":"","text":"运维大牛 运维工具 运维设计"},{"title":"项目","date":"2019-03-01T09:45:59.744Z","updated":"2019-03-01T09:45:59.739Z","comments":false,"path":"repository/index.html","permalink":"https://jieay.github.io/repository/index.html","excerpt":"","text":""},{"title":"","date":"2019-03-04T08:18:29.809Z","updated":"2019-03-04T08:18:29.803Z","comments":true,"path":"links/links.json","permalink":"https://jieay.github.io/links/links.json","excerpt":"","text":"{\"Baidu\":{\"link\":\"http://www.baidu.com\",\"avatar\":\"http://www.baidu.com/avatar.png\",\"desc\":\"国内度娘教你百科。\"}}"},{"title":"404 Not Found：该页无法显示","date":"2019-03-01T09:34:26.525Z","updated":"2019-03-01T09:34:26.525Z","comments":false,"path":"/404.html","permalink":"https://jieay.github.io//404.html","excerpt":"","text":""},{"title":"test","date":"2019-03-04T08:59:29.000Z","updated":"2019-03-04T08:59:29.277Z","comments":true,"path":"test/index.html","permalink":"https://jieay.github.io/test/index.html","excerpt":"","text":""}],"posts":[{"title":"Markdown的基本语法","slug":"Markdown的基本语法","date":"2019-03-05T08:00:05.000Z","updated":"2019-03-06T08:38:20.979Z","comments":true,"path":"2019/03/05/Markdown的基本语法/","link":"","permalink":"https://jieay.github.io/2019/03/05/Markdown的基本语法/","excerpt":"","text":"概述Markdown是一种轻量级的[标记语言]，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被[标记]、[语言]所迷惑，Markdown的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML标记语言来说，Markdown可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。废话不多说，直接开干，来看看Markdown的基本语法规则。 标题标题是每篇文章都需要也是最常用的格式，在Markdown中，如果一段文字被定义为标题，只须在这段文字前加#号即可。例如：123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题效果： 一级标题 二级标题 三级标题 四级标题 五级标题####### 六级标题以此类推，总共六级标题，建议在#号后加一个空格，这是最标准的Markdown语法。特别的，还可使用=(高阶标题)和-(次阶标题)标记一级和二级标题。例如：1234这是高阶标题(效果和一级标题一样)=这是次阶标题(效果和二级标题一样)- 效果：这是高阶标题(效果和一级标题一样) 这是次阶标题(效果和二级标题一样)注意：=和-标记标题时，=和-的个数在不同的编辑器中都有不同，我在简书中测试时，=和-的个数大于等于2个都可以表示，但是在Cmd Markdown中只要1个就可表示，还有说必须要三个或者以上的，我真不知道该相信谁的了，谁能告诉我！ 段落段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个或以上空格加上回车（引用中换行省略回车）。 列表熟悉HTML的同学肯定知道有序列表与无序列表的区别，在Markdown下，列表的显示只需要在文字前加上-、+或*即可变为无序列表，有序列表则直接在文字前加1. 2. 3.符号和文字之前加上一个字符的空格。例1，有序列表1231. 第一点2. 第二点4. 第三点效果：第一点第二点第三点例2，无序列表123- 这是无序列表项目+ 这是无序列表项目* 这是无序列表项目效果：这是无序列表项目这是无序列表项目这是无序列表项目两个列表之间不能相邻，否则会解释为嵌套的列表。例3，是嵌套的列表1234567+ 呵呵 * 嘉嘉 - 嘻嘻 - 吼吼 - 嘎嘎 + 桀桀* 哈哈效果：呵呵嘉嘉嘻嘻吼吼嘎嘎桀桀哈哈 注意标记后面最少有一个空格或制表符。若不在引用区块中，必须和前方段落之间存在空行，后面最好还是空一行，否则会解释为嵌套的列表。有序列表标记不是按照你写的数字进行显示的，而是根据当前有序列表标记所在位置显示的，如示例1所示。无序列表的项目符号是按照实心圆、空心圆、实心方格的层级关系递进的，如例3所示。通常情况下，同一层级使用同一种标记表示，便于自己查看和管理。 引用如果你需要引用一小段别处的句子，那么就要用引用的格式。只需要在文本前加入&gt;这种尖括号(大于号)即可。例如：1&gt; 这是引用效果：这是引用特别的，引用还可以嵌套，例如：12345&gt; 这是一级引用&gt;&gt; 这是二级引用&gt;&gt;&gt; 这是三级引用&gt; 这是一级引用效果：这是一级引用这是二级引用这是三级引用这是一级引用再如：1234&gt; 这是一级引用&gt;&gt; 这是二级引用&gt;&gt;&gt; 这是三级引用&gt; 这是一级引用效果：这是一级引用这是二级引用这是三级引用这是一级引用从上面两例可看出，如果&gt;、&gt;&gt;和&gt;&gt;&gt;等嵌套使用的话，从&gt;&gt;&gt;退到&gt;时，必须之间要加上一个空行作为过渡，否则默认为下一行和上一行是同一级别的引用。如上例所示。引用完之后，必须再空一行，重新一个新的开始，否则，以后的文字都将在引用的范围内，不要问我为什么，实践出真知。 代码块使用1234````markdown``` javascriptvar canvas = document.getElementById(&quot;canvas&quot;);var context = canvas.getContext(&quot;2d&quot;);1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374效果：``` javascriptvar canvas = document.getElementById(&quot;canvas&quot;);var context = canvas.getContext(&quot;2d&quot;);```#### 注意1. 如果要显示markdown的代码块语法，可以用4个反引号， 同理代码中包含3个反引号就可以用4个反引号。2. \\```后面的javascript表示此段代码为javascript代码，Markdown会自行使用javascript代码颜色渲染。附加：还可使用4个空格或者一个制表符（tab）缩进表示代码区块。### 行内代码使用``表示行内代码。例如：```markdown这是`java`代码。```效果：这是java代码。注意：需要和普通段落之间存在空行。### 链接链接可以由两种形式生成：行内式和参考式。- 使用`[](link &quot;Optional title&quot;)`表示行内链接。其中1. []内的内容为要添加链接的文字2. link为链接地址3. Optional title为显示标题。显示效果为在你将鼠标放到链接上后，会显示一个小框提示，提示的内容就是Optional title里的内容。中文显示乱码啊！差评例如：```markdown这就是行内链接：[百度](http://www.baidu.com &quot;百度&quot;)```效果：这就是行内链接：[百度](http://www.baidu.com &quot;百度&quot;)参考式链接，例如：```markdown这里我们参考：1. [JavaScript | MDN][1]2. [ECMAScript 6 入门 阮一峰][2]3. [InfoQ JavaScript][3][1]: http://developer.mozilla.org/zh-CN/docs/Web/JavaScript[2]: http://es6.ruanyifeng.com[3]: http://www.infoq.com/cn/javascript/?utm_source=infoq&amp;utm_medium=header_graybar&amp;utm_campaign=topic_clk```效果这里我们参考：1. [JavaScript | MDN][1]2. [ECMAScript 6 入门 阮一峰][2]3. [InfoQ JavaScript][3][1]: http://developer.mozilla.org/zh-CN/docs/Web/JavaScript [2]: http://es6.ruanyifeng.com [3]: http://www.infoq.com/cn/javascript/?utm_source=infoq&amp;utm_medium=header_graybar&amp;utm_campaign=topic_clk #### 注意1. 上述的`[1]: https://developer.mozilla.org/zh-CN/docs/Web/JavaScript`不出现在区块中。2. 参考式链接和行内链接的显示效果是一样的。但是在编辑状态下的使用情况不一样。行内连接紧跟链接文字，可以在看到链接文字的同时清楚的知道链接地址，但是不便于多次重复利用。参考式链接可以重复使用，但一般都是将一些链接放在一起统一管理，如一段文字后面或文章结尾，因此在找到链接和链接文字的对应关系上有些麻烦。各有利弊了，分情况使用。### 图片插入图片与插入链接的语法很像，区别在一个!号，而且也有行内式和参考式两种。 插入图片语法为：`![Alt text](/path/to/img.jpg &quot;Optional title&quot;)``Alt text`为如果图片无法显示时显示的文字。 `/path/to/img.jpg`为图片所在路径。 `Optional title`为显示标题。显示效果为在你将鼠标放到图片上后，会显示一个小框提示，提示的内容就是`Optional title`。行内式，例如：````markdown### 插入图片![图灵社区](http://www.turingbook.com/Content/img/Turing.Gif)效果： 插入图片参考式， 例如：1234[图灵社区][4]![图灵社区Logo][5][1]: http://www.ituring.com.cn[2]: http://www.turingbook.com/Content/img/Turing.Gif效果：[图灵社区][4]![图灵社区Logo][5][1]: http://www.ituring.com.cn[2]: http://www.turingbook.com/Content/img/Turing.Gif 强调使用**或__表示粗体。使用*或_表示斜体。例如：12**粗体1** __粗体2__*斜体1* _斜体2_效果：粗体1 粗体2斜体1 斜体2 注意：前后的*或_与要加粗或倾斜的字体之间不能有空格。 表格表格应该是Markdown比较累人的地方，语法真是操蛋！用|表示表格纵向边界，表头和表内容用-隔开，并可用:进行对齐设置，两边都有:则表示居中，若不加:则默认左对齐。详细说明：----: 为右对齐:---- 为左对齐:---: 为居中对齐----- 为默认左对齐 注意：- 这样的分隔符至少要有1个！目前测试是这样的！例如1：12345| 序号 | 交易名 | 交易说明 | 备注 || ---: | :----: | :------- | ---- || 1 | prfcfg | 菜单配置 | 可以通过此交易查询到所有交易码和菜单的对应关系 || 2 | gentmo | 编译所有交易 | || 100000 | sysdba | 数据库表模型汇总 | |效果：序号交易名交易说明备注1prfcfg菜单配置可以通过此交易查询到所有交易码和菜单的对应关系2gentmo编译所有交易100000sysdba数据库表模型汇总例如2：12345| Tables | Are | Cool || ------------- |:-------------:| -----:|| col 3 is | right-aligned |\\$1600 || col 2 is | centered | \\$12 || zebra stripes | are neat | $1 |效果：TablesAreCoolcol 3 isright-aligned$1600col 2 iscentered$12zebra stripesare neat$1例如3：12345dog | bird | cat----|------|----foo | foo | foobar | bar | barbaz | baz | baz效果：dogbirdcatfoofoofoobarbarbarbazbazbaz 注意最好还是和普通段落之间存在空行吧！虽然在Cmd Markdown中是不需要空一行的，但是在简书中测试就操蛋了。 分隔符分割线最常使用就是三个或以上*，还可以使用-和_。例如：12345***---___效果： 注意：只要*或者-大于等于三个就可组成一条平行线。使用---作为水平分割线时，要在它的前后都空一行，防止---被当成标题标记的表示方式。 反斜杠使用\\表示反斜杠，相当于反转义作用。在你不想显示Markdown标记时可以使用反斜杠。Markdown支持的转义字符列表：123456789101112\\ 反斜线` 反引号* 星号_ 底线&#123;&#125; 花括号[] 方括号() 括弧# 井字号+ 加号- 减号. 英文句点! 惊叹号 删除线使用~~表示删除线。例如：1~~这是一条删除线~~效果：这是一条删除线 注意~~和要添加删除线的文字之间不能有空格。 注脚使用[^footer1]表示注脚。例如：12这是一个注脚测试[^footer1][^footer1]: 这是一个测试，用来阐释注脚。效果：这是一个注脚测试[1] 标签分类使用标签:或者Tags:表示标签标记。例如：12标签: 数学 英语Tags: 数学 英语 注意标签:或者Tags:中的冒号要使用半角冒号基本没使用过这个标记，不过应用场景应该是归类。便于快速了解文章分类。难道可以通过某种方式来遍历到标签标记？不甚了解。如你知道：请告诉我。 锚点锚点功能可参考Github(我还未玩，忽略)。在Github的md 文件中，会为每个h1~h6标签，自动塞入一个a标签，并渲染好id。这是一个测试，用来阐释注脚。 ↩︎","categories":[{"name":"技术札记","slug":"技术札记","permalink":"https://jieay.github.io/categories/技术札记/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://jieay.github.io/tags/markdown/"}]},{"title":"Hexo 主题pure使用说明","slug":"Hexo-主题pure使用说明","date":"2019-03-04T10:25:56.000Z","updated":"2019-03-06T13:23:08.472Z","comments":true,"path":"2019/03/04/Hexo-主题pure使用说明/","link":"","permalink":"https://jieay.github.io/2019/03/04/Hexo-主题pure使用说明/","excerpt":"","text":"概述在网上可能有写博客的工具很多，选择一个喜欢的就行， 这里不做过多的推荐 Hexo，如果想用的化本文可以作为一个简单的入门说明，方便想要使用 Hexo 的同学可以快速入门，并且可以有一个还不错的主题，那么下面进入正题。 hexo 安装1安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请提交问题，我会尽力解决您的问题。 安装前提安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：Node.jsGit 安装 Hexo如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。1$ npm install -g hexo-cli 建站安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。1234mkdir blog cd bloghexo initnpm install新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。1234567├── _config.yml 网站的配置信息├── package.json 应用程序的信息├── scaffolds 模版文件夹├── source 资源文件夹是存放用户资源的地方| ├── _drafts| └── _posts└── themes 主题文件夹 配置 网站参数描述title网站标题subtitle网站副标题description网站描述author您的名字language网站使用的语言timezone网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。 网址参数描述默认值url网址root网站根目录permalink文章的 永久链接 格式:year/:month/:day/:title/permalink_defaults永久链接中各部分的默认值 网站存在子目录如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。 目录参数描述默认值source_dir资源文件夹，这个文件夹用来存放内容。sourcepublic_dir公共文件夹，这个文件夹用于存放生成的站点文件。publictag_dir标签文件夹tagsarchive_dir归档文件夹archivescategory_dir分类文件夹categoriescode_dirInclude code 文件夹downloads/codei18n_dir国际化（i18n）文件夹:langskip_render跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。 文章参数描述默认值new_post_name新文章的文件名称:title.mddefault_layout预设布局postauto_spacing在中文和英文之间加入空格falsetitlecase把标题转换为 title casefalseexternal_link在新标签中打开链接truefilename_case把文件名称转换为 (1) 小写或 (2) 大写0render_drafts显示草稿falsepost_asset_folder启动 Asset 文件夹falserelative_link把链接改为与根目录的相对位址falsefuture显示未来的文章truehighlight代码块的设置相对地址默认情况下，Hexo生成的超链接都是绝对地址。例如，如果您的网站域名为example.com,您有一篇文章名为hello，那么绝对链接可能像这样：http://example.com/hello.html，它是绝对于域名的。相对链接像这样：/hello.html，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。 分类和标签参数描述默认值default_category默认分类uncategorizedcategory_map分类别名tag_map标签别名 日期和时间参数描述默认值date_format日期格式YYYY-MM-DDtime_format时间格式H:mm:ss 分页参数描述默认值per_page每页显示的文章量 (0 = 关闭分页功能)10pagination_dir分页目录page 拓展参数描述theme当前主题名称。值为false时禁用主题deploy部署部分的设置 创建代码上传GitHub仓库注册并登陆GitHub账号后，新建仓库，名称必须为 user.github.io，如 xxxx.github.io。 配置远程github仓库简介：安装Hexo 上传文件到 git仓库， 若未关联GitHub，执行hexo d时会提示输入GitHub账号用户名和密码1npm install hexo-deployer-git --save配置：1234deploy: type: git repository: git地址（git@github.com:xxxx/xxxx.github.io.git） branch: master上传到服务器。1hexo deployhexo deploy 执行成功后便可通过 https://xxxx.github.io 访问博客，看到的内容和 http://localhost:4000 相同。 快速开始 创建新的文章1$ hexo new \"My New Post\"新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。More info: Writing 运行 hexo 服务1$ hexo server 或者 hexo s启动服务器。默认情况下，访问网址为： http://localhost:4000/。选项描述-p, --port重设端口-s, --static只使用静态文件-l, --log启动日记记录，使用覆盖记录格式More info: Server 生成html静态文件1$ hexo generate 或者 hexo g选项描述-d, --deploy文件生成后立即部署网站-w, --watch监视文件变动More info: Generating 提交到远程github仓库1$ hexo deploy 或者 hexo dMore info: Deployment Pure主题 配置说明在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件12站点配置：&lt;blog&gt;目录下的 _config.yml 文件主题配置：&lt;blog&gt;/themes/pure/_config.yml 下载主题12cd &lt;blog目录&gt;git clone https://github.com/cofess/hexo-theme-pure.git themes/pure打开站点配置文件，找到theme字段，将其值更改为 pure， hexo/_config.yml 文件 theme: pure 更新主题12cd themes/puregit pull 测试主题到此，主题安装完成。然后启动Hexo服务验证主题是否正确启用。1hexo s使用浏览器访问[http://localhost:4000],检查主体是否被启用 主题设定 设置语言打开 站点配置 文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应 themes\\pure\\languages 目录下语言文件，简体中文配置如下：1language: zh-CN 设置个人信息123头像在 `themes\\pure\\source\\images` 目录下替换图片即可，捐献的二维码同理。个人信息大部分都在 主题配置文件 中设置 设置菜单右边导航菜单在 主题配置 文件中配置12345678910111213141516171819202122# 导航菜单menu: Home: . Archives: archives # 归档 Categories: categories # 分类 Tags: tags # 标签 Repository: repository # github repositories Books: books # 书单 Links: links # 友链 About: about # 关于# 导航菜单图标（font awesome）menu_icons: enable: true # 是否启用菜单图标 home: fa-dashboard archives: fa-delicious categories: fa-folder tags: fa-tags repository: fa-code books: fa-leanpub links: fa-gg about: fa-coffee 搜索主题内置三种站内搜索方式：insight、swiftype、baidu12345# Searchsearch: insight: true # you need to install `hexo-generator-json-content` before using Insight Search swiftype: # enter swiftype install key here baidu: false # you need to disable other search engines to use Baidu search 分享支持weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin123456# Share# weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedinshare: enable: true # 是否启用分享 sites: weibo,qq,wechat,facebook,twitter # PC端显示的分享图标 mobile_sites: weibo,qq,qzone # 移动端显示的分享图标 评论主题集成了disqus、友言、来必力、gitment评论系统，选择其中一种即可12345678910111213141516# Comment# Gitment# Introduction: https://imsun.net/posts/gitment-introduction/comment: type: livere # 启用哪种评论系统 disqus: # enter disqus shortname here youyan: uid: *** # enter youyan uid livere: uid: *** # enter livere uid gitment: githubID: username repo: username.github.io ClientID: *** ClientSecret: *** lazy: false Github respostory复制 theme/pure/_source/ 目录下 repository 文件夹到blog path/source/ 目录下123# Githubgithub: username: *** # github username 豆瓣书单复制 theme/pure/_source/ 目录下books文件夹到blog path/source/ 目录下12345# douban 豆瓣书单douban: user: *** # 豆瓣用户名 start: 0 # 从哪一条记录开始 count: 100 # 获取豆瓣书单数据条数 友情链接复制 theme/pure/_source/ 目录下links文件夹到blog path/source/ 目录下在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。单个友情链接的格式为：1234Name: link: http://example.com avatar: http://example.com/avatar.png desc: \"这是一个描述\" 文章启用目录索引 (写文章的 .md 文件头部添加)12345678910\\---title: 文章标题date: 2019-03-05 16:00:05categories: - 文章分类tags: - 文章标签toc: true # 是否启用内容索引mathjax: true # 浏览器中的开源的数学符号渲染引擎是否启用\\--- 添加背景动画背景动画基于canvas，在 \\themes\\pure\\layout\\layout.ejs 的中面添加1&lt;script type=\"text/javascript\" src=\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"&gt;&lt;/script&gt; 站点建立时间这个时间将在站点的底部显示，例如 © 2019。 编辑 主题配置 文件，新增字段 since。1since: 2019 添加404公益页面新建 404.html 页面，放到主题的 source 目录下，内容如下：123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" /&gt; &lt;meta name=\"robots\" content=\"all\" /&gt; &lt;meta name=\"robots\" content=\"index,follow\"/&gt; &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"/\" homePageName=\"回到我的主页\"&gt; &lt;/script&gt; &lt;script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"&gt;&lt;/script&gt; &lt;script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 阅读次数统计阅读次数统计，在主题配置文件 中把busuanzi设置为true即可：123pv: busuanzi: enable: true # 阅读次数统计 hexo-wordcount简介：为文章添加文章字数统计、文章预计阅读时间1npm install hexo-wordcount --save配置：在 主题配置 文件 中设置为true：12345# wordcountpostCount: enable: true wordcount: true # 文章字数统计 min2read: true # 阅读时长预计 hexo-douban简介：为博客添加豆瓣书单和豆瓣电影。（不支持分页，数据大网络差有可能出现超时错误）1npm install hexo-douban --save配置： 在 站点配置 文件 _config.yml中添加12345678douban: user: 豆瓣个性域名 book: title: 'This is my book title' quote: 'This is my book quote' movie: title: 'This is my movie title' quote: 'This is my movie quote'主题已经默认添加了豆瓣书单，豆瓣电影自己配置 hexo-autonofollow简介：自动为站外链接添加nofollow属性1npm install hexo-autonofollow --save配置：在 站点配置 文件_config.yml中添加12345nofollow: enable: true exclude: - exclude1.com - exclude2.com hexo-generator-feed简介：RSS的生成插件，你可以在配置显示你站点的RSS，文件路径 \\atom.xml。1npm install hexo-generator-feed --save配置：在 站点配置 文件_config.yml中添加123456feed: type: atom path: atom.xml limit: 20 hub: content: hexo-generator-sitemap简介：生成博客的sitemap1npm install hexo-generator-sitemap --save配置：在 站点配置 文件_config.yml中添加12sitemap: path: sitemap.xml hexo-generator-baidu-sitemap简介：生成博客的sitemap（针对百度）。1npm install hexo-generator-baidu-sitemap --save配置：在 站点配置 文件_config.yml中添加12baidusitemap: path: baidusitemap.xml hexo-generator-json-content简介：用于生成静态站点数据，提供搜索功能的数据源。1npm install hexo-generator-json-content --save配置：在 站点配置 文件_config.yml中添加1234567jsonContent: ignore: - path/to/a/page - url/to/one/post - an-entire-category - specific.file - .ext # a file extension hexo-neat简介：自动压缩html、css、js代码1npm install hexo-neat --save配置：在 站点配置 文件_config.yml中添加123456789101112131415neat_enable: trueneat_html: enable: ture exclude:neat_css: enable: true exclude: - '*.min.css'neat_js: enable: true mangle: true output: compress: exclude: - '*.min.js' hexo-translate-title简介：使用Google翻译，百度翻译和有道翻译将Hexo中的汉字标题转成英文标题1npm install hexo-translate-title --save配置：在 站点配置 文件_config.yml中添加123456translate_title: translate_way: google #google | baidu | youdao youdao_api_key: XXX youdao_keyfrom: XXX is_need_proxy: true #true | false proxy_url: http://localhost:8123注意：判断是否需要配置google本地代理，因为我在本地是开启时才能访问google翻译的，如果没有被墙，请将_config.yml 下的is_need_proxy: true改为false。如果设置为true,请设置本地代理地址 数学公式Hexo默认使用&quot;hexo-renderer-marked&quot;引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签更换Hexo的markdown渲染引擎，hexo-renderer-markdown-it-plus引擎替换默认的渲染引擎hexo-renderer-marked即可。安装hexo-renderer-markdown-it-plus插件12npm un hexo-renderer-marked --savenpm i hexo-renderer-markdown-it-plus --save配置：安装插件后，如果未正常渲染LaTeX数学公式，在 站点配置 文件_config.yml中添加12345678910111213141516markdown_it_plus: highlight: true html: true xhtmlOut: true breaks: true langPrefix: linkify: true typographer: quotes: “”‘’ plugins: - plugin: name: markdown-it-katex enable: true - plugin: name: markdown-it-mark enable: false 文章启用 mathjax1mathjax: true 报错解决问题一：123456789101112131415161718192021222324252627$ hexo clean &amp;&amp; hexo gINFO Deleted database.INFO Start processingconfig.translate_title==&gt; undefinedconfig.url==&gt; http://yoursite.comconfig.translate_title==&gt; undefinedconfig.url==&gt; http://yoursite.comINFO neat the html: /Users/jiangjunjie/jieay/data/jblog/source/_posts/hello-world.md [ 0.67% saved]INFO neat the html: /Users/jiangjunjie/jieay/data/jblog/source/_posts/my-first.md [ 0.47% saved]FATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlTypeError: Cannot read property 'count' of undefined at Hexo.module.exports (/Users/jiangjunjie/jieay/data/jblog/node_modules/hexo-baidu-url-submit/lib/generator.js:4:41) at Hexo.tryCatcher (/Users/jiangjunjie/jieay/data/jblog/node_modules/bluebird/js/release/util.js:16:23) at Hexo.&lt;anonymous&gt; (/Users/jiangjunjie/jieay/data/jblog/node_modules/bluebird/js/release/method.js:15:34) at Promise.map.key (/Users/jiangjunjie/jieay/data/jblog/node_modules/hexo/lib/hexo/index.js:344:26) at tryCatcher (/Users/jiangjunjie/jieay/data/jblog/node_modules/bluebird/js/release/util.js:16:23) at MappingPromiseArray._promiseFulfilled (/Users/jiangjunjie/jieay/data/jblog/node_modules/bluebird/js/release/map.js:61:38) at MappingPromiseArray.PromiseArray._iterate (/Users/jiangjunjie/jieay/data/jblog/node_modules/bluebird/js/release/promise_array.js:114:31) at MappingPromiseArray.init (/Users/jiangjunjie/jieay/data/jblog/node_modules/bluebird/js/release/promise_array.js:78:10) at MappingPromiseArray._asyncInit (/Users/jiangjunjie/jieay/data/jblog/node_modules/bluebird/js/release/map.js:30:10) at _drainQueueStep (/Users/jiangjunjie/jieay/data/jblog/node_modules/bluebird/js/release/async.js:142:12) at _drainQueue (/Users/jiangjunjie/jieay/data/jblog/node_modules/bluebird/js/release/async.js:131:9) at Async._drainQueues (/Users/jiangjunjie/jieay/data/jblog/node_modules/bluebird/js/release/async.js:147:5) at Immediate.Async.drainQueues [as _onImmediate] (/Users/jiangjunjie/jieay/data/jblog/node_modules/bluebird/js/release/async.js:17:14) at runCallback (timers.js:705:18) at tryOnImmediate (timers.js:676:5) at processImmediate (timers.js:658:5)解决：参考链接：https://github.com/hexojs/hexo/issues/2402123456$ npm remove hexo-baidu-url-submitnpm WARN babel-eslint@10.0.1 requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.removed 2 packages and audited 21504 packages in 5.388sfound 11 vulnerabilities (10 low, 1 moderate) run `npm audit fix` to fix them, or `npm audit` for details 参考文档官网文档： https://hexo.io/zh-cn/docsHexo博客主题pure使用说明： https://blog.cofess.com/2017/11/01/hexo-blog-theme-pure-usage-description.html)","categories":[{"name":"技术札记","slug":"技术札记","permalink":"https://jieay.github.io/categories/技术札记/"}],"tags":[{"name":"hexo pure","slug":"hexo-pure","permalink":"https://jieay.github.io/tags/hexo-pure/"}]}]}